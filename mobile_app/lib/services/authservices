import '../models/user.dart';

class AuthService {
  List<User> _users = [];
  User? _currentUser;

  // Login method
  User? login(String email, String password) {
    final user = _users.firstWhere(
      (user) => user.email == email && user.password == password,
      orElse: () => User(id: '', name: '', email: '', password: '', phone: ''),
    );

    if (user.id.isNotEmpty) {
      _currentUser = user;
      print('Login successful: ${user.name}');
      return user;
    } else {
      print('Login failed: Invalid credentials');
      return null;
    }
  }

  // Register method
  User register(Map<String, dynamic> userData) {
    final user = User.register(userData);
    _users.add(user);
    print('Registration successful: ${user.name}');
    return user;
  }

  // Logout method
  void logout() {
    if (_currentUser != null) {
      _currentUser!.logout();
      _currentUser = null;
    }
  }

  // Get current user
  User? get currentUser => _currentUser;

  // Reset password
  bool resetPassword(String email, String newPassword) {
    final user = _users.firstWhere(
      (user) => user.email == email,
      orElse: () => User(id: '', name: '', email: '', password: '', phone: ''),
    );

    if (user.id.isNotEmpty) {
      user.resetPassword(newPassword);
      return true;
    }
    return false;
  }
}